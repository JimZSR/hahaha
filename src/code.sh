
cfdisk /dev/sda

#利用LiveCD，此时会出现分区状况选择界面，在该界面中划分sda1，sda2，两个区

mkfs.ext3 /dev/sda2

mkswap /dev/sda1

swapon /dev/sda1

export SYSDIR=/opt/mylinux

mkdir -pv ${SYSDIR}

mount /dev/sda2 ${SYSDIR}

mkdir -pv ${SYSDIR}/sources

mkdir -pv ${SYSDIR}/build

chmod -v a+wt ${SYSDIR}/{sources,build}

mkdir -pv ${SYSDIR}/tools

ln -sv ${SYSDIR}/tools /

groupadd mylinux

useradd -s /bin/bash -g mylinux -m -k /dev/null mylinux

passwd mylinux

#紧接着设置自己的密码，这里我设置的是root123

chown -v mylinux ${SYSDIR}/tools
chown -v mylinux ${SYSDIR}/sources
chown -v mylinux ${SYSDIR}/build

su - mylinux

cat > ~/.bash_profile << "EOF"

exec env -i HOME=${HOME} TERM=${TERM} PS1='\u:\w\$' /bin/bash

EOF

cat > ~/.bashrc << "EOF"

set +h

umask 022

SYSDIR=/opt/mylinux

LC_ALL=POSIX

PATH=/tools/bin:/bin:/usr/bin

DOWNLOADDIR=${SYSDIR}/sources

BUILDDIR=${SYSDIR}/build

export SYSDIR LC_ALL PATH DOWNLOADDIR BUILDDIR

EOF

source ~/.bash_profile

cp /usr/src/sources/* ${DOWNLOADDIR}/

cp /usr/src/patches/* ${DOWNLOADDIR}/

#以下解压并安装的各个软件、工具包均来自已经下载到LiveCD中的相应文件

tar xvf ${DOWNLOADDIR}/binutils-2.20.tar.bz2 -C ${BUILDDIR}

pushd ${BUILDDIR}/binutils-2.20

mkdir -pv ../binutils-build

cd ../binutils-build

CC="gcc -B/usr/bin/" ../binutils-2.20/configure \

--prefix=/tools --disable-nls --disable-werror

make

make install

make -C ld clean

make -C ld LIB_PATH=/tools/lib 

cp -v ld/ld-new /tools/bin

cd ..

rm -rf binutils-build

rm -rf binutils-2.20

popd

tar xvf ${DOWNLOADDIR}/gcc-4.4.2.tar.bz2 -C ${BUILDDIR}

pushd ${BUILDDIR}/gcc-4.4.2

tar xvf ${DOWNLOADDIR}/gmp-4.3.1.tar.bz2

mv gmp-4.3.1 gmp 

tar xvf ${DOWNLOADDIR}/mpfr-2.4.2.tar.bz2

mv mpfr-2.4.2 mpfr 

mkdir -pv ../gcc-build

cd gcc-build 

CC="gcc -B/usr/bin/" ../gcc-4.4.2/configure --prefix=/tools \

--disable-nls \

--disable-multilib --enable-shared \

--enable-languages=c 

make bootstrap

make install

ln -vs gcc /tools/bin/cc 

cd ..

rm -rf gcc-build

rm -rf gcc-4.4.2

popd

tar xvf ${DOWNLOADDIR}/linux-2.6.33.tar.bz2 -C ${BUILDDIR}

pushd ${BUILDDIR}/linux-2.6.33

make mrproper

make headers_check

make INSTALL_HDR_PATH=dest headers_install

cp -rv dest/include/* /tools/include

cd ..

rm -rf linux-2.6.33

popd

tar xvf ${DOWNLOADDIR}/glibc-2.11.tar.bz2 -C ${BUILDDIR}

pushd ${BUILDDIR}/glibc-2.11

mkdir -v ../gcc-build

cd ../gcc-build

echo "CFLAGS += -march=i686 -mtune=native" > configparms

../glibc-2.11/configure --prefix=/tools --enable-kernel=2.6.0 \

--without-gd --without-selinux

make

mkdir -v /tools/etc

touch /tools/etc/ld.so.conf 

make install

cd ..

rm -rf glibc-build

rm -rf glibc-2.11

popd

#以下是调整工具链的代码段，之前的每次安装以及目录创建都有相应的校验，且校验结果均显示过程正确，所以书中给出的下面这部分代码可能有误，我暂时没发现是哪里出错了

mv -v /tools/bin/{ld,ld-old}

mv -v /tools/$(gcc -dumpmachine)/bin/{ld,ld-old}

mv -v /tools/bin/{ld-new,ld}

ln -sv /tools/bin/ld /tools/$(gcc -dumpmachine)/bin/ld

gcc -dumpspecs | sed 's@/lib/ld@/tools&@g' \

$(dirname $(gcc -print-libgcc-file-name))/specs

GCC-FIXED=$(dirname $(gcc -print-libgcc-file-name))/include-fixed

find ${GCC_FIXED}/* -maxdepth 0 -xtype d -exec rm -rvf '{}' \;

rm -vf $(grep -l "DO NOT EDIT THIS FILE" $(GCC_FIXED)/*)

unset GCC_FIXED

